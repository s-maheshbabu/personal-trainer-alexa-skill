{"ActionAndEntity":{"Types":{"ExerciseLevel":{"extends":"AMAZON.Literal"},"ExerciseType":{"extends":"AMAZON.Literal"},"MuscleGroup":{"extends":"AMAZON.Literal"},"StringLiteral":{"extends":"AMAZON.Literal"}},"APIs":{"StartWorkoutAPI":{"args":{"ExerciseLevel":{"type":"ExerciseLevel","optional":"True"},"MuscleGroups":{"type":"List<MuscleGroup>","optional":"True"},"Duration":{"type":"AMAZON.DURATION","optional":"True"},"ExerciseType":{"type":"ExerciseType"}},"returns":"StringLiteral","nlg":[]}}},"Language":{"SpeechActs":{}},"UserUtteranceGroup":{"StartWorkout_WithAllParameters":{"args":{"ExerciseType":"ExerciseType","Duration":"AMAZON.DURATION","MuscleGroups":"List<MuscleGroup>","ExerciseLevel":"ExerciseLevel"},"formatters":["start an ${ExerciseLevel} ${Duration} ${ExerciseType} workout for ${MuscleGroups}"],"dialogAct":"invoke","api":null},"StartWorkout_WithExerciseType":{"args":{"ExerciseType":"ExerciseType"},"formatters":["lets do ${ExerciseType}","start a ${ExerciseType} exercise","start a ${ExerciseType} workout"],"dialogAct":"invoke","api":null},"SpecifyExerciseLevel":{"args":{"ExerciseLevel":"ExerciseLevel"},"formatters":["i am looking for an ${ExerciseLevel} workout","keep is ${ExerciseLevel}","lets do an ${ExerciseLevel} workout"],"dialogAct":"inform","api":null},"SpecifyMuscleGroups":{"args":{"MuscleGroups":"List<MuscleGroup>"},"formatters":["${MuscleGroups}","lets do ${MuscleGroups}","${MuscleGroups}  please"],"dialogAct":"inform","api":null},"SpecifyDuration":{"args":{"Duration":"AMAZON.DURATION"},"formatters":["about ${Duration}"],"dialogAct":"inform","api":null},"SpecifyExerciseType":{"args":{"ExerciseType":"ExerciseType"},"formatters":["${ExerciseType} exercise","${ExerciseType}","${ExerciseType} workout","i am planning to do a ${ExerciseType} workout"],"dialogAct":"inform","api":null},"StartWorkout":{"args":{},"formatters":["search for workouts","find an exercise video","find a workout video","start an exercise","start a workout"],"dialogAct":"invoke","api":null},"welcome":{"args":{},"formatters":["let's get started"],"dialogAct":"invoke","api":"welcome"}},"GoldenConversations":"{site: amzn1.ask.skill.da84aedf-f1e6-4ebd-a156-a404dcc8eff3}\n\n{dialogName: StartWorkout}\n{start}\nU: start a workout\nU: { userNlg: StartWorkout() }\nA: { nlg: request(api=StartWorkoutAPI, [{response=SolicitExerciseType(),arguments=[ExerciseType]}]) }\nA: what type of workout are you looking for?\nU: i am planning to do a [cardio|ExerciseType -> exerciseType0] workout\nU: { userNlg: SpecifyExerciseType(ExerciseType=$exerciseType0) }\nA: { nlg: request(api=StartWorkoutAPI, [{response=SolicitDuration(),arguments=[Duration]}]) }\nA: how much time do you have?\nU: about [twenty minutes|AMAZON.DURATION -> amazonDURATION0]\nU: { userNlg: SpecifyDuration(Duration=$amazonDURATION0) }\nA: { nlg: request(api=StartWorkoutAPI, [{response=SolicitMuscleGroups(),arguments=[MuscleGroups]}]) }\nA: do you want to focus on any muscle groups?\nU: [abs|MuscleGroup -> muscleGroup0Member0Line13] please\nU: { userNlg: SpecifyMuscleGroups(MuscleGroups=[$muscleGroup0Member0Line13]) }\nA: {call: AMAZON.AddElementsToList(elements=[$muscleGroup0Member0Line13]) -> muscleGroup0}\nA: { nlg: request(api=StartWorkoutAPI, [{response=SolicitExerciseLevel(),arguments=[ExerciseLevel]}]) }\nA: do you have a preference for the difficulty level?\nU: lets do an [easy|ExerciseLevel -> exerciseLevel0] workout\nU: { userNlg: SpecifyExerciseLevel(ExerciseLevel=$exerciseLevel0) }\nA: { call: StartWorkoutAPI(ExerciseLevel=$exerciseLevel0, MuscleGroups=$muscleGroup0, Duration=$amazonDURATION0, ExerciseType=$exerciseType0) -> stringLiteral0 }\nA: { nlg: notifySuccess(api=StartWorkoutAPI, response=StartWorkoutResponse()) }\nA: dummy response. control would be transferred to the interaction model skill by this point.\n{end}\n\n{dialogName: StartWorkout_WithExerciseType}\n{start}\nU: start a [cardio|ExerciseType -> exerciseType0] workout\nU: { userNlg: StartWorkout_WithExerciseType(ExerciseType=$exerciseType0) }\nA: { call: StartWorkoutAPI(ExerciseType=$exerciseType0) -> stringLiteral0 }\nA: { nlg: notifySuccess(api=StartWorkoutAPI, response=StartWorkoutResponse()) }\nA: dummy response. control would be transferred to the interaction model skill by this point.\n{end}\n\n{dialogName: StartWorkout_WithAllParameters}\n{start}\nU: start an [easy|ExerciseLevel -> exerciseLevel0] [twenty minute|AMAZON.DURATION -> amazonDURATION0] [cardio|ExerciseType -> exerciseType0] workout for [quads|MuscleGroup -> muscleGroup0Member0Line1] and [calves|MuscleGroup -> muscleGroup0Member1Line1]\nU: { userNlg: StartWorkout_WithAllParameters(ExerciseType=$exerciseType0, Duration=$amazonDURATION0, MuscleGroups=[$muscleGroup0Member0Line1, $muscleGroup0Member1Line1], ExerciseLevel=$exerciseLevel0) }\nA: {call: AMAZON.AddElementsToList(elements=[$muscleGroup0Member0Line1, $muscleGroup0Member1Line1]) -> muscleGroup0}\nA: { call: StartWorkoutAPI(ExerciseLevel=$exerciseLevel0, MuscleGroups=$muscleGroup0, Duration=$amazonDURATION0, ExerciseType=$exerciseType0) -> stringLiteral0 }\nA: { nlg: notifySuccess(api=StartWorkoutAPI, response=StartWorkoutResponse()) }\nA: dummy response. control would be transferred to the interaction model skill by this point.\n{end}\n\n","RawDialogs":"","UserNlg":{},"Catalog":{},"SimulatorConfig":{},"annotationJSON":{"dialogs":[],"pagination":{"currentDialogIndex":null,"currentTurnIndex":null,"isLast":true},"isSecondPass":{"isSecondPassVal":false},"daSysRec":[],"oldDialogCount":0},"converted":false}